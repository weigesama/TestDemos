<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.yuanwl.domain.OrderMapper">

    <!-- 
        根据id查询得到一个order对象，使用这个查询是查询不到我们想要的结果的，
        这主要是因为实体类的属性名和数据库的字段名对应不上的原因，因此无法查询出对应的记录。
        注意：在配置文件里加上map-underscore-to-camel-case: true，可以实现下划线字段自动转驼峰命名属性，
        但是如果字段和属性没有这样的对应关系，这个配置也搞不定，只能用下面的两种方法之一解决了
     -->
    <select id="getOrderErr" resultType="xyz.yuanwl.domain.Order">
        select * from `order` where order_id=#{id}
    </select>

    <!-- 
        根据id查询得到一个order对象，使用这个查询是可以正常查询到我们想要的结果的，
        这是因为我们将查询的字段名都起一个和实体类属性名相同的别名，这样实体类的属性名和查询结果中的字段名就可以一一对应上了
     -->
    <select id="getOrderSucc" resultType="xyz.yuanwl.domain.Order">
        select order_id id, order_no orderNo,order_price price from `order` where order_id=#{id}
    </select>

    <!-- 
        根据id查询得到一个order对象，使用这个查询是可以正常查询到我们想要的结果的，
        这是因为我们通过<resultMap>映射实体类属性名和表的字段名一一对应关系
     -->
    <select id="getOrder2ResultMap" resultMap="orderResultMap">
        select * from `order` where order_id=#{id}
    </select>

    <!-- 通过 <resultMap> 映射实体类属性名和表的字段名对应关系。type：类的完全限定名, 或者一个类型别名 -->
    <resultMap id="orderResultMap" type="xyz.yuanwl.domain.Order">
        <!-- 用id属性来映射主键字段。property：实体类属性名；column：表字段名 -->
        <id property="id" column="order_id"/>
        <!-- 用result属性来映射非主键字段 -->
        <result property="orderNo" column="order_no"/>
        <result property="price" column="order_price"/>
    </resultMap>

</mapper>